# -*- coding: utf-8 -*-
"""jsonToImg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v1La6GQ6mn8hkbAXsrsalYFAcxDhQef7
"""

import cv2
import json
import numpy as np
import os

def draw_skeleton_on_image( json_path, output_path):
    # 读取图像
    #image = cv2.imread(image_path)

    # 打开 JSON 文件
    with open(json_path, 'r') as file:
        data = json.load(file)

    # 获取关键点的连接顺序
    skeleton = [
        (0, 1), (0, 15), (0, 16), (1, 2), (1, 5),(1, 8), (2, 3),
        (3, 4), (5, 6), (6, 7), 
        (8, 9), (8, 12), (9, 10),
        (10, 11), (11, 22), (11, 24), (12, 13), (13, 14),
        (14, 19), (14, 21), 
        (15, 17), (16, 18), 
        (19, 20),
        (22, 23)
    ]
    color = [
        (255,0,0), (0, 255, 0), (0,0,255),
        (255, 255, 0), (255, 0, 255), (0, 255, 255),
        (255, 241, 67), (255, 67, 241), (67, 255, 241),
        (0, 161, 92), (161, 0, 92), (161, 92, 0),
        (234, 205, 118), (234, 118, 205), (118, 234, 205),
        (104, 165, 218), (104, 218, 165), (218, 104, 165),
        (233, 231, 239), (233, 239, 231), (239, 233, 231),
        (255, 192, 203), (255, 203, 192), (203, 255, 192),
        (255, 255, 255)
        ]

    # 绘制骨架
    for person in data['people']:
        keypoints = person['pose_keypoints_2d']

        # 依次连接每个关键点对
        image = np.zeros((960, 540, 3))
        idx = 0
        for connection in skeleton:
            idx_1, idx_2 = connection
            x1, y1, _ = keypoints[idx_1 * 3:idx_1 * 3 + 3]  # 第一个关键点的坐标
            x2, y2, _ = keypoints[idx_2 * 3:idx_2 * 3 + 3]  # 第二个关键点的坐标
            cv2.line(image, (int(x1), int(y1)), (int(x2), int(y2)), color[idx], 5)
            idx += 1
            # cv2.imshow('image', image)
            # 在图像上绘制红色线段

    # 保存输出图像
    
    cv2.imwrite(output_path, image)

    # 保存输出图像
    

# 使用示例
# image_path = './base.jpg'  # 输入图像的文件路径
# json_path = './LA/CVCG1_2934976_20211217_LA_1Json/CVCG1_2934976_20211217_LA_1_000000000000_keypoints.json'  # 输入 JSON 文件的路径
# output_path = './img/image_with_skeleton.jpg'  # 输出包含骨架的图像路径

# draw_skeleton_on_image(image_path, json_path, output_path)

path = './LA'
for fold in os.listdir(path):
    if not os.path.isdir('./output/'+fold):
        os.mkdir('./output/'+fold)
    for js in os.listdir(path+'/'+fold):
        json_path = path+'/'+fold+'/'+js
        output_path = './output/'+fold+'/'+js+'.png'
        if '.ini' in js:
            continue
        draw_skeleton_on_image( json_path, output_path)

